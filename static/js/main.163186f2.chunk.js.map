{"version":3,"sources":["sampleData.js","App.js","reportWebVitals.js","index.js"],"names":["originalData","name","gender","math","physics","data","labels","map","obj","datasets","label","backgroundColor","App","className","options","scales","yAxes","ticks","beginAtZero","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAMA,EAAe,CACnB,CAAEC,KAAM,OAAQC,OAAQ,OAAQC,KAAM,IAAKC,QAAS,IACpD,CAAEH,KAAM,OAAQC,OAAQ,SAAUC,KAAM,GAAIC,QAAS,IACrD,CAAEH,KAAM,OAAQC,OAAQ,OAAQC,KAAM,GAAIC,QAAS,KAuBtCC,EApBF,CACXC,OAAQN,EAAaO,KAAI,SAACC,GAAD,gBAAYA,EAAIP,KAAhB,sBAAiD,SAAfO,EAAIN,OAAoB,IAAM,QACzFO,SAAU,CACR,CACEC,MAAO,aACPL,KAAML,EAAaO,KAAI,SAACC,GAAD,OAASA,EAAIL,QACpCQ,gBAAiB,CACf,0BAGJ,CACED,MAAO,gBACPL,KAAML,EAAaO,KAAI,SAACC,GAAD,OAASA,EAAIJ,WACpCO,gBAAiB,CACf,4B,OCUOC,MA1Bf,WAaE,OACE,qCACE,qBAAKC,UAAU,MAAf,SACE,6CAEF,sBAAKA,UAAU,YAAf,UACE,iEACA,cAAC,IAAD,CAAKR,KAAMA,EAAMS,QAnBP,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,gBCEVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.163186f2.chunk.js","sourcesContent":["const originalData = [\n  { name: \"John\", gender: \"male\", math: 100, physics: 80 },\n  { name: \"Jane\", gender: \"female\", math: 80, physics: 20 },\n  { name: \"Biju\", gender: \"male\", math: 60, physics: 90 },\n];\n\nconst data = {\n  labels: originalData.map((obj) => `${obj.name} | Gender: ${obj.gender === \"male\" ? \"M\" : \"F\"}`),\n  datasets: [\n    {\n      label: \"Math Score\",\n      data: originalData.map((obj) => obj.math),\n      backgroundColor: [\n        \"rgba(255, 99, 132, 1)\",\n      ],\n    },\n    {\n      label: \"Physics Score\",\n      data: originalData.map((obj) => obj.physics),\n      backgroundColor: [\n        \"rgba(54, 162, 235, 1)\",\n      ],\n    },\n  ],\n};\n\nexport default data;\n","import './App.css';\nimport { Bar } from 'react-chartjs-2';\nimport data from './sampleData';\n\nfunction App() {\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Chart App</h1>\n      </div>\n      <div className=\"App-chart\">\n        <h2>Subject Scoring Data by Student</h2>\n        <Bar data={data} options={options} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}